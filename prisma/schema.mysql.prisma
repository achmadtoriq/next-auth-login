generator client {
  provider = "prisma-client-js"
  output   = "./generated/mysql"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL_JAGOAN")
}

model article_tag {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  article_id BigInt    @db.UnsignedBigInt
  tag_id     BigInt    @db.UnsignedBigInt
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  articles   articles  @relation(fields: [article_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "article_tag_article_id_foreign")
  tags       tags      @relation(fields: [tag_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "article_tag_tag_id_foreign")

  @@index([article_id], map: "article_tag_article_id_foreign")
  @@index([tag_id], map: "article_tag_tag_id_foreign")
}

model articles {
  id             BigInt        @id @default(autoincrement()) @db.UnsignedBigInt
  title          String        @db.VarChar(255)
  slug           String        @unique(map: "articles_slug_unique") @db.VarChar(255)
  content        String        @db.Text
  content_detail String        @db.Text
  created_at     DateTime?     @db.Timestamp(0)
  updated_at     DateTime?     @db.Timestamp(0)
  article_tag    article_tag[]
}

model cache {
  key        String @id @db.VarChar(255)
  value      String @db.MediumText
  expiration Int
}

model google_mitra_images {
  id         Int       @id @default(autoincrement())
  folder_id  String    @db.VarChar(255)
  image_id   String    @db.VarChar(255)
  image_name String    @db.VarChar(255)
  image_path String?   @db.Text
  image_desc String?   @db.Text
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)
}

model insta_api_credentials {
  id            Int       @id @default(autoincrement())
  name          String?   @db.VarChar(100)
  client_id     BigInt    @unique(map: "insta_api_credentials_unique") @default(0)
  redirect_uri  String?   @db.Text
  scope         String?   @db.Text
  client_secret String?   @db.Text
  access_token  String?   @db.Text
  created_date  DateTime  @default(now()) @db.Timestamp(0)
  updated_date  DateTime? @db.Timestamp(0)
}

model layanans {
  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  title       String    @db.VarChar(255)
  description String    @db.Text
  image       String    @db.VarChar(255)
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
}

model meta_descriptions {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  routename  String    @unique(map: "meta_descriptions_routename_unique") @db.VarChar(255)
  meta_desc  String    @db.Text
  meta_title String    @db.Text
  title      String    @db.VarChar(255)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model mitra_menus {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name       String    @db.VarChar(255)
  classname  String    @db.VarChar(255)
  url        String    @db.VarChar(255)
  order      Int       @default(0)
  is_active  Boolean   @default(false)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model partners {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  path       String    @db.VarChar(255)
  alt        String    @db.VarChar(255)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model produks {
  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  title       String    @db.VarChar(255)
  description String    @db.Text
  image       String    @db.VarChar(255)
  alt         String    @db.VarChar(255)
  slug        String    @unique(map: "produks_slug_unique") @db.VarChar(255)
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
}

model sessions {
  id            String  @id @db.VarChar(255)
  user_id       BigInt? @db.UnsignedBigInt
  ip_address    String? @db.VarChar(45)
  user_agent    String? @db.Text
  payload       String  @db.LongText
  last_activity Int

  @@index([last_activity], map: "sessions_last_activity_index")
  @@index([user_id], map: "sessions_user_id_index")
}

model tags {
  id          BigInt        @id @default(autoincrement()) @db.UnsignedBigInt
  name        String        @db.VarChar(255)
  created_at  DateTime?     @db.Timestamp(0)
  updated_at  DateTime?     @db.Timestamp(0)
  article_tag article_tag[]
}

model users_google {
  id                       Int     @id @default(autoincrement())
  name                     String  @db.VarChar(255)
  access_token             String? @db.Text
  refresh_token            String? @db.Text
  scope                    String  @db.VarChar(255)
  token_type               String  @db.VarChar(255)
  refresh_token_expires_in BigInt?
  expiry_date              BigInt?
}
